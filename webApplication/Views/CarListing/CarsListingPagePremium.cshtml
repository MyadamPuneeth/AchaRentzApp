@model IEnumerable<DAL.Models.CarDetail>
@inject IHttpContextAccessor HttpContextAccessor
@{
    var totalCars = Model.Count();
    ViewData["Title"] = "CarsListingPage";
}
<div class="main-body">
    <aside class="filter-section">
        <div class="side-bar">
            <form asp-controller="Home" asp-action="HomePage" method="post">
                <button class="find-ride-btn">Find Your Perfect Ride!</button>
                <div class="filter-options">
                    <h3>Filters</h3>

                    @await Html.PartialAsync("_CarDateTime", new RentalDetail
               {
                   FromDateTime = TempData["FromDateTime"] != null ? (DateTime)TempData["FromDateTime"] : DateTime.Now,
                   ToDateTime = TempData["ToDateTime"] != null ? (DateTime)TempData["ToDateTime"] : DateTime.Now.AddHours(1)
               })
                    <label>Brand:</label>
                    <select id="brandSelect">
                        <option value="all">All</option>
                        <option value="toyota">Toyota</option>
                        <option value="bmw">BMW</option>
                        <option value="audi">Audi</option>
                    </select>
                    <label>Price Range:</label>
                    <input type="range" min="1000" max="100000" value="50000" id="priceRange">
                    <label>Fuel Type:</label>
                    <select id="fuelTypeSelect">
                        <option value="all">All</option>
                        <option value="petrol">Petrol</option>
                        <option value="diesel">Diesel</option>
                        <option value="electric">Electric</option>
                    </select>
                </div>
            </form>
            
            
        </div>
    </aside>

    <div class="car-tile-rows">
        <div class="search-bar">
            <input type="text" name="searchbar" placeholder="Search for an Ideal Car" />
        </div>

        <div class="car-tiles-div" id="carTilesContainer">
            <!-- Render all car tiles -->
            @foreach (var car in Model)
            {
                @Html.Partial("_TestCarDetailsTile", car)
            }
        </div>
    </div>
</div>

<script>
    // For filtering
    $('.filter-options select, .filter-options input').change(function () {
        $.get('/CarListing/FilterCars', {
            brand: $('#brandSelect').val(),
            maxPrice: $('#priceRange').val(),
            fuelType: $('#fuelTypeSelect').val()
        })
            .done(function (response) {
                if (response.success) {
                    // Clear and reload the car container
                    $('#carTilesContainer').empty();
                    response.cars.forEach(function (car) {
                        // Your existing car HTML template code here
                    });
                }
            });
    });

    // For searching
    let searchTimeout;
    $('input[name="searchbar"]').on('input', function () {
        clearTimeout(searchTimeout);
        const searchTerm = $(this).val();

        searchTimeout = setTimeout(function () {       
            if (searchTerm.length >= 2) {
                $.get('/CarListing/SearchCars', { searchTerm: searchTerm })
                    .done(function (response) {
                        if (response.success) {
                            // Clear and reload the car container
                            $('#carTilesContainer').empty();
                            response.cars.forEach(function (car) {
                                // Your existing car HTML template code here
                            });
                        }
                    });
            }
        }, 300); // Debounce search for better performance
    });
</script>
